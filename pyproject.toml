[project]
name = "ASReview-NEMO"
description = "ASReview New Exciting Models"
readme = "README.md"
authors = [
    { name = "ASReview LAB developers", email = "asreview@uu.nl" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
keywords = ["systematic review"]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
    "asreview==2.0a3",
    "xgboost",
    "sentence_transformers",
    "gensim",
    "numpy",
    "scikeras",
    "scikit-learn",
    "tensorflow",
    "scipy==1.12",
    "tf-keras"
]

[project.urls]
Issues = "https://github.com/asreview/asreview-nemo/issues"
Repository = "https://github.com/asreview/asreview-nemo/"

[build-system]
build-backend = 'setuptools.build_meta'
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]

[tool.setuptools]
packages = ["asreviewcontrib", "asreviewcontrib.nemo_models", "asreviewcontrib.nemo"]

[tool.setuptools_scm]
write_to = "asreviewcontrib/nemo/_version.py"

[project.entry-points."asreview.models.classifiers"]
"adaboost" = "asreviewcontrib.nemo_models.classifiers.adaboost:AdaBoost"
"dynamic-nn" = "asreviewcontrib.nemo_models.classifiers.dynamic_nn:DynamicNNClassifier"
"nn-2-layer" = "asreviewcontrib.nemo_models.classifiers.nn_2_layer:NN2LayerClassifier"
"xgboost" = "asreviewcontrib.nemo_models.classifiers.xgboost:XGBoost"

[project.entry-points."asreview.models.feature_extraction"]
"sbert" = "asreviewcontrib.nemo_models.feature_extraction.sbert:SBERT"
"doc2vec" = "asreviewcontrib.nemo_models.feature_extraction.doc2vec:Doc2Vec"
"mxbai" = "asreviewcontrib.nemo_models.feature_extraction.mxbai:MXBAI"
"labse" = "asreviewcontrib.nemo_models.feature_extraction.labse:LaBSE"

[project.entry-points."asreview.entry_points"]
nemo = "asreviewcontrib.nemo.entrypoint:NemoEntryPoint"

[tool.ruff]
select = ["E", "F", "UP", "B"]

[tool.ruff.isort]
force-single-line = true
